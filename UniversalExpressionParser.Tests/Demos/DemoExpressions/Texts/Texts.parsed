<?xml version="1.0" encoding="utf-8"?>
<UniversalExpressionParser.IParseExpressionResult ObjectId='0' PositionInTextOnCompletion='879' IndexInText='0' ItemLength='879'>
	<ParseErrorData ObjectId='1' HasCriticalErrors='False' Interface='UniversalExpressionParser.IParseErrorData'>
		<AllParseErrorItems ObjectId='2' Count='0' Interface='System.Collections.Generic.IReadOnlyList`1[UniversalExpressionParser.IParseErrorItem]'/>
	</ParseErrorData>
	<SortedCommentedTextData ObjectId='3' Count='4' Interface='System.Collections.Generic.IReadOnlyList`1[UniversalExpressionParser.ICommentedTextData]'>
		<UniversalExpressionParser.ICommentedTextData ObjectId='4' IsLineComment='True' IndexInText='0' ItemLength='127'/>
		<UniversalExpressionParser.ICommentedTextData ObjectId='5' IsLineComment='True' IndexInText='129' ItemLength='99'/>
		<UniversalExpressionParser.ICommentedTextData ObjectId='6' IsLineComment='True' IndexInText='230' ItemLength='39'/>
		<UniversalExpressionParser.ICommentedTextData ObjectId='7' IsLineComment='True' IndexInText='273' ItemLength='58'/>
	</SortedCommentedTextData>
	<RootExpressionItem Id='637873056587367757' IndexInText='333' ItemLength='546' Interface='UniversalExpressionParser.ExpressionItems.IRootExpressionItem'>
		<RegularItems>
			<IOperatorExpressionItem.Binary Name='=' Priority='2000' Id='637873056587368827' IndexInText='333' ItemLength='452' Interface='UniversalExpressionParser.ExpressionItems.IOperatorExpressionItem'>
				<Operand1.ILiteralExpressionItem LiteralName.Text='x' Id='637873056587368075' IndexInText='333' ItemLength='1' Interface='UniversalExpressionParser.ExpressionItems.ILiteralExpressionItem'>
					<RegularItems>
						<ILiteralNameExpressionItem Text='x' Id='637873056587368066' IndexInText='333' ItemLength='1' Interface='UniversalExpressionParser.ExpressionItems.ILiteralNameExpressionItem'/>
					</RegularItems>
					<OtherProperties>
						<LiteralName Text='x' Id='637873056587368066' IndexInText='333' ItemLength='1' Interface='UniversalExpressionParser.ExpressionItems.ILiteralNameExpressionItem'/>
					</OtherProperties>
				</Operand1.ILiteralExpressionItem>
				<IOperatorInfoExpressionItem OperatorType='BinaryOperator' Name='=' Priority='2000' Id='637873056587368175' IndexInText='335' ItemLength='1' Interface='UniversalExpressionParser.ExpressionItems.IOperatorInfoExpressionItem'>
					<OperatorNameParts>
						<IOperatorNamePartExpressionItem Text='=' Id='637873056587368164' IndexInText='335' ItemLength='1' Interface='UniversalExpressionParser.ExpressionItems.IOperatorNamePartExpressionItem'/>
					</OperatorNameParts>
				</IOperatorInfoExpressionItem>
				<Operand2.IOperatorExpressionItem.Binary Name='+' Priority='30' Id='637873056587368855' IndexInText='337' ItemLength='448' Interface='UniversalExpressionParser.ExpressionItems.IOperatorExpressionItem'>
					<Operand1.IOperatorExpressionItem.Binary Name='+' Priority='30' Id='637873056587368847' IndexInText='337' ItemLength='297' Interface='UniversalExpressionParser.ExpressionItems.IOperatorExpressionItem'>
						<Operand1.IConstantTextExpressionItem TextValue.Text='&quot;We can use this text expression marker &quot;&quot; if we type it twice. However, other text marker chars do not need to be typed twice such as &#39; and `.&quot;'
						  TextValue.CSharpText='&quot;We can use this text expression marker &quot;&quot; if we type it twice. However, other text marker chars do not need to be typed twice such as &#39; and `.&quot;' Id='637873056587368345' IndexInText='337' ItemLength='144'
						  Interface='UniversalExpressionParser.ExpressionItems.IConstantTextExpressionItem'>
							<RegularItems>
								<IConstantTextValueExpressionItem Text='&quot;We can use this text expression marker &quot;&quot; if we type it twice. However, other text marker chars do not need to be typed twice such as &#39; and `.&quot;'
								  CSharpText='We can use this text expression marker &quot; if we type it twice. However, other text marker chars do not need to be typed twice such as &#39; and `.' Id='637873056587368338' IndexInText='337' ItemLength='144' Interface='UniversalExpressionParser.ExpressionItems.IConstantTextValueExpressionItem'/>
							</RegularItems>
							<OtherProperties>
								<TextValue Text='&quot;We can use this text expression marker &quot;&quot; if we type it twice. However, other text marker chars do not need to be typed twice such as &#39; and `.&quot;'
								  CSharpText='We can use this text expression marker &quot; if we type it twice. However, other text marker chars do not need to be typed twice such as &#39; and `.' Id='637873056587368338' IndexInText='337' ItemLength='144' Interface='UniversalExpressionParser.ExpressionItems.IConstantTextValueExpressionItem'/>
							</OtherProperties>
						</Operand1.IConstantTextExpressionItem>
						<IOperatorInfoExpressionItem OperatorType='BinaryOperator' Name='+' Priority='30' Id='637873056587368430' IndexInText='489' ItemLength='1' Interface='UniversalExpressionParser.ExpressionItems.IOperatorInfoExpressionItem'>
							<OperatorNameParts>
								<IOperatorNamePartExpressionItem Text='+' Id='637873056587368419' IndexInText='489' ItemLength='1' Interface='UniversalExpressionParser.ExpressionItems.IOperatorNamePartExpressionItem'/>
							</OperatorNameParts>
						</IOperatorInfoExpressionItem>
						<Operand2.IConstantTextExpressionItem TextValue.Text='&#39;We can use this text expression marker &#39;&#39; if we type it twice. However, other text marker chars do not need to be typed twice such as &quot; and `.&#39;'
						  TextValue.CSharpText='&#39;We can use this text expression marker &#39;&#39; if we type it twice. However, other text marker chars do not need to be typed twice such as &quot; and `.&#39;' Id='637873056587368575' IndexInText='490' ItemLength='144'
						  Interface='UniversalExpressionParser.ExpressionItems.IConstantTextExpressionItem'>
							<RegularItems>
								<IConstantTextValueExpressionItem Text='&#39;We can use this text expression marker &#39;&#39; if we type it twice. However, other text marker chars do not need to be typed twice such as &quot; and `.&#39;'
								  CSharpText='We can use this text expression marker &#39; if we type it twice. However, other text marker chars do not need to be typed twice such as &quot; and `.' Id='637873056587368570' IndexInText='490' ItemLength='144' Interface='UniversalExpressionParser.ExpressionItems.IConstantTextValueExpressionItem'/>
							</RegularItems>
							<OtherProperties>
								<TextValue Text='&#39;We can use this text expression marker &#39;&#39; if we type it twice. However, other text marker chars do not need to be typed twice such as &quot; and `.&#39;'
								  CSharpText='We can use this text expression marker &#39; if we type it twice. However, other text marker chars do not need to be typed twice such as &quot; and `.' Id='637873056587368570' IndexInText='490' ItemLength='144' Interface='UniversalExpressionParser.ExpressionItems.IConstantTextValueExpressionItem'/>
							</OtherProperties>
						</Operand2.IConstantTextExpressionItem>
					</Operand1.IOperatorExpressionItem.Binary>
					<IOperatorInfoExpressionItem OperatorType='BinaryOperator' Name='+' Priority='30' Id='637873056587368638' IndexInText='640' ItemLength='1' Interface='UniversalExpressionParser.ExpressionItems.IOperatorInfoExpressionItem'>
						<OperatorNameParts>
							<IOperatorNamePartExpressionItem Text='+' Id='637873056587368632' IndexInText='640' ItemLength='1' Interface='UniversalExpressionParser.ExpressionItems.IOperatorNamePartExpressionItem'/>
						</OperatorNameParts>
					</IOperatorInfoExpressionItem>
					<Operand2.IConstantTextExpressionItem TextValue.Text='`We can use this text expression marker `` if we type it twice. However, other text marker chars do not need to be typed twice such as &quot; and &#39;.`'
					  TextValue.CSharpText='`We can use this text expression marker `` if we type it twice. However, other text marker chars do not need to be typed twice such as &quot; and &#39;.`' Id='637873056587368787' IndexInText='641' ItemLength='144' Interface='UniversalExpressionParser.ExpressionItems.IConstantTextExpressionItem'>
						<RegularItems>
							<IConstantTextValueExpressionItem Text='`We can use this text expression marker `` if we type it twice. However, other text marker chars do not need to be typed twice such as &quot; and &#39;.`'
							  CSharpText='We can use this text expression marker ` if we type it twice. However, other text marker chars do not need to be typed twice such as &quot; and &#39;.' Id='637873056587368782' IndexInText='641' ItemLength='144' Interface='UniversalExpressionParser.ExpressionItems.IConstantTextValueExpressionItem'/>
						</RegularItems>
						<OtherProperties>
							<TextValue Text='`We can use this text expression marker `` if we type it twice. However, other text marker chars do not need to be typed twice such as &quot; and &#39;.`'
							  CSharpText='We can use this text expression marker ` if we type it twice. However, other text marker chars do not need to be typed twice such as &quot; and &#39;.' Id='637873056587368782' IndexInText='641' ItemLength='144' Interface='UniversalExpressionParser.ExpressionItems.IConstantTextValueExpressionItem'/>
						</OtherProperties>
					</Operand2.IConstantTextExpressionItem>
				</Operand2.IOperatorExpressionItem.Binary>
			</IOperatorExpressionItem.Binary>
			<ISeparatorCharacterExpressionItem Text=';' Id='637873056587368908' IndexInText='785' ItemLength='1' Interface='UniversalExpressionParser.ExpressionItems.ISeparatorCharacterExpressionItem'/>
			<IBracesExpressionItem NameLiteral.LiteralName.Text='println' Id='637873056587369030' IndexInText='790' ItemLength='88' Interface='UniversalExpressionParser.ExpressionItems.IBracesExpressionItem'>
				<RegularItems>
					<ILiteralExpressionItem LiteralName.Text='println' Id='637873056587369000' IndexInText='790' ItemLength='7' Interface='UniversalExpressionParser.ExpressionItems.ILiteralExpressionItem'>
						<RegularItems>
							<ILiteralNameExpressionItem Text='println' Id='637873056587368995' IndexInText='790' ItemLength='7' Interface='UniversalExpressionParser.ExpressionItems.ILiteralNameExpressionItem'/>
						</RegularItems>
						<OtherProperties>
							<LiteralName Text='println' Id='637873056587368995' IndexInText='790' ItemLength='7' Interface='UniversalExpressionParser.ExpressionItems.ILiteralNameExpressionItem'/>
						</OtherProperties>
					</ILiteralExpressionItem>
					<IOpeningBraceExpressionItem Text='(' Id='637873056587369038' IndexInText='797' ItemLength='1' Interface='UniversalExpressionParser.ExpressionItems.IOpeningBraceExpressionItem'/>
					<IOperatorExpressionItem.Binary Name='+' Priority='30' Id='637873056587369574' IndexInText='798' ItemLength='79' Interface='UniversalExpressionParser.ExpressionItems.IOperatorExpressionItem'>
						<Operand1.IOperatorExpressionItem.Binary Name='+' Priority='30' Id='637873056587369563' IndexInText='798' ItemLength='57' Interface='UniversalExpressionParser.ExpressionItems.IOperatorExpressionItem'>
							<Operand1.IConstantTextExpressionItem TextValue.Text='&quot;This is a text that spans
 multiple 
 lines.   
&quot;' TextValue.CSharpText='&quot;This is a text that spans
 multiple 
 lines.   
&quot;' Id='637873056587369138' IndexInText='798' ItemLength='53' Interface='UniversalExpressionParser.ExpressionItems.IConstantTextExpressionItem'>
								<RegularItems>
									<IConstantTextValueExpressionItem Text='&quot;This is a text that spans
 multiple 
 lines.   
&quot;' CSharpText='This is a text that spans
 multiple 
 lines.   
' Id='637873056587369133' IndexInText='798' ItemLength='53' Interface='UniversalExpressionParser.ExpressionItems.IConstantTextValueExpressionItem'/>
								</RegularItems>
								<OtherProperties>
									<TextValue Text='&quot;This is a text that spans
 multiple 
 lines.   
&quot;' CSharpText='This is a text that spans
 multiple 
 lines.   
' Id='637873056587369133' IndexInText='798' ItemLength='53' Interface='UniversalExpressionParser.ExpressionItems.IConstantTextValueExpressionItem'/>
								</OtherProperties>
							</Operand1.IConstantTextExpressionItem>
							<IOperatorInfoExpressionItem OperatorType='BinaryOperator' Name='+' Priority='30' Id='637873056587369197' IndexInText='852' ItemLength='1' Interface='UniversalExpressionParser.ExpressionItems.IOperatorInfoExpressionItem'>
								<OperatorNameParts>
									<IOperatorNamePartExpressionItem Text='+' Id='637873056587369187' IndexInText='852' ItemLength='1' Interface='UniversalExpressionParser.ExpressionItems.IOperatorNamePartExpressionItem'/>
								</OperatorNameParts>
							</IOperatorInfoExpressionItem>
							<Operand2.ILiteralExpressionItem LiteralName.Text='x' Id='637873056587369329' IndexInText='854' ItemLength='1' Interface='UniversalExpressionParser.ExpressionItems.ILiteralExpressionItem'>
								<RegularItems>
									<ILiteralNameExpressionItem Text='x' Id='637873056587369323' IndexInText='854' ItemLength='1' Interface='UniversalExpressionParser.ExpressionItems.ILiteralNameExpressionItem'/>
								</RegularItems>
								<OtherProperties>
									<LiteralName Text='x' Id='637873056587369323' IndexInText='854' ItemLength='1' Interface='UniversalExpressionParser.ExpressionItems.ILiteralNameExpressionItem'/>
								</OtherProperties>
							</Operand2.ILiteralExpressionItem>
						</Operand1.IOperatorExpressionItem.Binary>
						<IOperatorInfoExpressionItem OperatorType='BinaryOperator' Name='+' Priority='30' Id='637873056587369388' IndexInText='856' ItemLength='1' Interface='UniversalExpressionParser.ExpressionItems.IOperatorInfoExpressionItem'>
							<OperatorNameParts>
								<IOperatorNamePartExpressionItem Text='+' Id='637873056587369381' IndexInText='856' ItemLength='1' Interface='UniversalExpressionParser.ExpressionItems.IOperatorNamePartExpressionItem'/>
							</OperatorNameParts>
						</IOperatorInfoExpressionItem>
						<Operand2.IConstantTextExpressionItem TextValue.Text='&#39; Some other text.&#39;' TextValue.CSharpText='&#39; Some other text.&#39;' Id='637873056587369521' IndexInText='858' ItemLength='19' Interface='UniversalExpressionParser.ExpressionItems.IConstantTextExpressionItem'>
							<RegularItems>
								<IConstantTextValueExpressionItem Text='&#39; Some other text.&#39;' CSharpText=' Some other text.' Id='637873056587369516' IndexInText='858' ItemLength='19' Interface='UniversalExpressionParser.ExpressionItems.IConstantTextValueExpressionItem'/>
							</RegularItems>
							<OtherProperties>
								<TextValue Text='&#39; Some other text.&#39;' CSharpText=' Some other text.' Id='637873056587369516' IndexInText='858' ItemLength='19' Interface='UniversalExpressionParser.ExpressionItems.IConstantTextValueExpressionItem'/>
							</OtherProperties>
						</Operand2.IConstantTextExpressionItem>
					</IOperatorExpressionItem.Binary>
					<IClosingBraceExpressionItem Text=')' Id='637873056587369600' IndexInText='877' ItemLength='1' Interface='UniversalExpressionParser.ExpressionItems.IClosingBraceExpressionItem'/>
				</RegularItems>
				<Children>
					<IOperatorExpressionItem.Binary Name='+' Priority='30' Id='637873056587369574' IndexInText='798' ItemLength='79' Interface='UniversalExpressionParser.ExpressionItems.IOperatorExpressionItem'/>
				</Children>
				<OtherProperties>
					<NameLiteral LiteralName.Text='println' Id='637873056587369000' IndexInText='790' ItemLength='7' Interface='UniversalExpressionParser.ExpressionItems.ILiteralExpressionItem'/>
					<OpeningBrace Text='(' Id='637873056587369038' IndexInText='797' ItemLength='1' Interface='UniversalExpressionParser.ExpressionItems.IOpeningBraceExpressionItem'/>
					<ClosingBrace Text=')' Id='637873056587369600' IndexInText='877' ItemLength='1' Interface='UniversalExpressionParser.ExpressionItems.IClosingBraceExpressionItem'/>
					<Parameters ObjectId='44' Count='1' Interface='System.Collections.Generic.IReadOnlyList`1[UniversalExpressionParser.ExpressionItems.IExpressionItemBase]'>
						<UniversalExpressionParser.ExpressionItems.IExpressionItemBase Name='+' Priority='30' Id='637873056587369574' IndexInText='798' ItemLength='79' Interface='UniversalExpressionParser.ExpressionItems.IOperatorExpressionItem'/>
					</Parameters>
				</OtherProperties>
			</IBracesExpressionItem>
			<ISeparatorCharacterExpressionItem Text=';' Id='637873056587369636' IndexInText='878' ItemLength='1' Interface='UniversalExpressionParser.ExpressionItems.ISeparatorCharacterExpressionItem'/>
		</RegularItems>
		<Children>
			<IOperatorExpressionItem.Binary Name='=' Priority='2000' Id='637873056587368827' IndexInText='333' ItemLength='452' Interface='UniversalExpressionParser.ExpressionItems.IOperatorExpressionItem'/>
			<IBracesExpressionItem NameLiteral.LiteralName.Text='println' Id='637873056587369030' IndexInText='790' ItemLength='88' Interface='UniversalExpressionParser.ExpressionItems.IBracesExpressionItem'/>
		</Children>
	</RootExpressionItem>
</UniversalExpressionParser.IParseExpressionResult>